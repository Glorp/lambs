

    Infinite Lambda Calculus
    or, Ill-Typed Programs Considered Helpful
    or, LAMBDA: The Ultimate Recursor



Emacs Lisp-evaluating (start-lamb <x>) should start the thing.
(Pictures generated by the Racket-thing will go in a dir called <x>.)
Put cursor on end of next line, do C-x C-e, and wait for it to go beep boop:
(start-lamb "mesh")

Beep boop.

Then, for instructions, cursor on the line below and do <C-return>:
:slide halp

*~*~*~*~*~*~*~*~*

:slide hello

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

Hello?

(insert-pic "imgs/pudu.png")
 


(some notes to a self:
maybe have a DrRacket open?
SML as well?
border-length, textsize stuffs?
did I switch out "temp" with sth?)

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


*~*~*~*~*~*~*~*~*

:slide rules

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

Syntax:
Exp u ::= x         variable
          λx.u      abstraction
          u1 u2     application

Computation rule:
(λx.u1) u2
[u2/x]u1

e.g.
:draw (λx.x) foo
(insert-pic "mesh/img0.png")
 



(λa.λb.λc.a c c) foo bar quux
(λb.λc.foo c c) bar quux
(λc.foo c c) quux
foo quux quux

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


:slide churchnums

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

nums like:
zero ≜ λf.λx.x
one ≜ λf.λx.f x
two ≜ λf.λx.f (f x)
five ≜ λf.λx.f (f (f (f (f x))))

some trickery:
add1 ≜ λn.λf.λx.f (n f x)

                     base case
         recursive case  |
                |        |
                V        V
plus ≜ λa.λb.a add1      b

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


:slide little

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

(insert-pic "imgs/ls.png")
 

The Little Schemer uses
    * numbers, add1, sub1, zero?
    * booleans and if or cond or something
    * elephants

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


:slide ruleses

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

Syntax:
Exp u ::= x                         variable
          λx.u                      abstraction
          u1 u2                     application
          true                      boolean
          false                     boolean
          if                        stuff
          [0-9]+                    number
          add1                      stuff
          sub1                      stuff
          zero?                     stuff

          maybe other stuff         also stuff
e.g.

(λa.λb.λc.a c c) foo bar quux
(λb.λc.foo c c) bar quux
(λc.foo c c) quux
foo quux quux

:install npm
Installing Number Package Module...

add1 3
4


zero? 0
true

if false foo bar
bar


(λx.(if (zero? (sub1 x)) add1 sub1)) 1 5
if (zero? (sub1 1)) add1 sub1 5
if (zero? 0) add1 sub1 5
if true add1 sub1 5
add1 5
6

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


*~*~*~*~*~*~*~*~*

:slide plus

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

(insert-pic "imgs/plus.png")
 

(define plus
  (lambda (n m)
    (cond
      ((zero? m) n)
      (else (add1 (plus n (sub1 m)))))))

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

foo ≜ + 1 3
foo is defined :)


foo 
+ 1 3


plus' ≜ λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))
plus' is defined :)

plus' 17 0
(λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 17 0
(λm.if (zero? m) 17 (add1 (____ 17 (sub1 m)))) 0
if (zero? 0) 17 (add1 (____ 17 (sub1 0)))
if true 17 (add1 (____ 17 (sub1 0)))
17


plus' 19 0
(λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 19 0
(λm.if (zero? m) 19 (add1 (____ 19 (sub1 m)))) 0
if (zero? 0) 19 (add1 (____ 19 (sub1 0)))
if true 19 (add1 (____ 19 (sub1 0)))
19

plus' 10 1
(λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 1
(λm.if (zero? m) 10 (add1 (____ 10 (sub1 m)))) 1
if (zero? 1) 10 (add1 (____ 10 (sub1 1)))
if false 10 (add1 (____ 10 (sub1 1)))
add1 (____ 10 (sub1 1))
add1 (plus' 10 0)
add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 0)
add1 ((λm.if (zero? m) 10 (add1 (____ 10 (sub1 m)))) 0)
add1 (if (zero? 0) 10 (add1 (____ 10 (sub1 0))))
add1 (if true 10 (add1 (____ 10 (sub1 0))))
add1 10
11

plus'


plus'' ≜ λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (( n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))
plus'' is defined :)
plus'' is defined :)

plus''
plus'' ≜ λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))
plus'' is defined :)

plus'' 10 7
(λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 7
(λm.if (zero? m) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 m)))) 7
if (zero? 7) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 7)))
if false 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 7)))
add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 7))
add1 ((λm.if (zero? m) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 m)))) (sub1 7))
add1 (if (zero? (sub1 7)) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 7)))))
add1 (if (zero? 6) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 7)))))
add1 (if false 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 7)))))
add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 7))))
add1 (add1 ((λm.if (zero? m) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 m)))) (sub1 (sub1 7))))
add1 (add1 (if (zero? (sub1 (sub1 7))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 7)))))))
add1 (add1 (if (zero? (sub1 6)) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 7)))))))
add1 (add1 (if (zero? 5) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 7)))))))
add1 (add1 (if false 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 7)))))))
add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 7))))))
add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 m)))) (sub1 (sub1 (sub1 7))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 7)))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 7)))))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 6))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 7)))))))))
add1 (add1 (add1 (if (zero? (sub1 5)) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 7)))))))))
add1 (add1 (add1 (if (zero? 4) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 7)))))))))
add1 (add1 (add1 (if false 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 7)))))))))
add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 7))))))))
add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 7))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 7))))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 6)))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 5))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 4)) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))
add1 (add1 (add1 (add1 (if (zero? 3) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))
add1 (add1 (add1 (add1 (if false 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))
add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))))))
add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 7))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 7)))))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 6))))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 5)))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 4))) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 3)) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? 2) 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))
add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 6)))))) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 5))))) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 4)))) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 3))) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 2)) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 1) 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 (____ n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 (____ 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 6))))))) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 5)))))) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 4))))) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 3)))) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 2))) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 1)) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 0) 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if true 10 (add1 (____ 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 10))))))
add1 (add1 (add1 (add1 (add1 (add1 11)))))
add1 (add1 (add1 (add1 (add1 12))))
add1 (add1 (add1 (add1 13)))
add1 (add1 (add1 14))
add1 (add1 15)
add1 16
17



dd1 (____ n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) n (sub1 m)))) 10 3


yagni.

:slide churchnums

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

nums like:
zero ≜ λf.λx.x
one ≜ λf.λx.f x
two ≜ λf.λx.f (f x)
five ≜ λf.λx.f (f (f (f (f x))))

some trickery:
add1 ≜ λn.λf.λx.f (n f x)

                     base case
         recursive case  |
                |        |
                V        V
plus ≜ λa.λb.a add1      b

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


*~*~*~*~*~*~*~*~*

:slide plusses

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

                                                    ...
                              \__________________________________________/
                                                     |
                                                     v
                        λn.λm.if (zero? m) n (add1 (___ n (sub1 m)))
                        \__________________________________________/
                                               |
                                               v
                  λn.λm.if (zero? m) n (add1 (___ n (sub1 m)))
                  \__________________________________________/
                                         |
                                         v
            λn.λm.if (zero? m) n (add1 (___ n (sub1 m)))
            \__________________________________________/
                                   |
                                   v
      λn.λm.if (zero? m) n (add1 (___ n (sub1 m)))
      \__________________________________________/
                             |
                             v
λn.λm.if (zero? m) n (add1 (___ n (sub1 m)))

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


*~*~*~*~*~*~*~*~*

:slide incons

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

Church made lambda calculus, for to use as logic and things
Kleene and Rosser proved that it was inconsistent

"in the sense that every forumula in their notation is
provable, irrespective of its meaning under the
interpretation intended for the symbols"

which probably involves like terms that have no "solution"
like if you try to reduce them you can go on like forever

I guess we could like read what they wrote

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


:slide incoons?

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

um,
(insert-pic "imgs/incons.png")
 

hmmm, um?

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


:slide okay!

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

okay.

anyway, people added like types to avoid stuff like that. so

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


*~*~*~*~*~*~*~*~*

:slide small-expressions

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

smallest, lambda and variable ref:
a -> a
λx.x

two lambdas and variable ref:

a -> b -> a
λa.λb.a
a -> b -> b
λa.λb.b

one lambda and function application (and variable refs):
λx.x x

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


:slide t-error

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

SML:
- fn x => x x;;
stdIn:1.10-1.13 Error: operator is not a function [circularity]
  operator: 'Z
  in expression:
    x x

Haskell:
Prelude> \x -> x x

<interactive>:2:9:
    Occurs check: cannot construct the infinite type: t1 = t1 -> t0
    In the first argument of `x', namely `x'
    In the expression: x x
    In the expression: \ x -> x x

F#:
> fun x -> x x;;

  fun x -> x x;;
  -----------^

stdin(1,12): error FS0001: Type mismatch. Expecting a
    'a
but given a
    'a -> 'b
The resulting type would be infinite when unifying ''a' and ''a -> 'b'

Coq:
(insert-pic "imgs/c.png")
 


 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


*~*~*~*~*~*~*~*~*

(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)

(λx.x x) (λx.foo (x x))
(λx.foo (x x)) (λx.foo (x x))
foo ((λx.foo (x x)) (λx.foo (x x)))
foo (foo ((λx.foo (x x)) (λx.foo (x x))))
foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))
foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))
foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))
foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))
foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))
foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))))))))))))))))))))))
foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))))))))))))))))))))))))



plus'




(λx.x x) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 10
(λx.x x) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 10
(λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 10
(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 10
(λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 10
(λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) 10
if (zero? 10) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 10)))
if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 10)))
add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 10))
add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 10))
add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 10))
add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 10))
add1 (if (zero? (sub1 10)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10)))))
add1 (if (zero? 9) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10)))))
add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10)))))
add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10))))
add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 10))))
add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 10))))
add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 10))))
add1 (add1 (if (zero? (sub1 (sub1 10))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (if (zero? (sub1 9)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (if (zero? 8) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 10)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 9))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if (zero? (sub1 8)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if (zero? 7) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 10))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 9)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 8))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 7)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? 6) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 10)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 9))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 8)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 7))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 6)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? 5) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 9)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 8))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 7)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 6))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 5)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 4) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 8)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 7))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 6)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 5))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 4)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 3) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 8))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 7)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 6))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 5)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 4))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 3)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 2) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 8)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 6)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 5))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 4)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 3))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 2)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 1) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9)))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 8))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 6))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 5)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 4))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 3)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 2))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 1)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 0) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if true 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 10)))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 11))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 12)))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 13))))))
add1 (add1 (add1 (add1 (add1 (add1 14)))))
add1 (add1 (add1 (add1 (add1 15))))
add1 (add1 (add1 (add1 16)))
add1 (add1 (add1 17))
add1 (add1 18)
add1 19
20


(λx.x x) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 10
(λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 10
(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 10
(λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 10
(λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) 10
if (zero? 10) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 10)))
if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 10)))
add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 10))
add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 10))
add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 10))
add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 10))
add1 (if (zero? (sub1 10)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10)))))
add1 (if (zero? 9) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10)))))
add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10)))))
add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 10))))
add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 10))))
add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 10))))
add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 10))))
add1 (add1 (if (zero? (sub1 (sub1 10))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (if (zero? (sub1 9)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (if (zero? 8) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10)))))))
add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 10))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 10)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 9))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if (zero? (sub1 8)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if (zero? 7) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10)))))))))
add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 10))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 10))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 9)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 8))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 7)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if (zero? 6) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))
add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 10)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 9))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 8)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 7))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 6)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? 5) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 9)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 8))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 7)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 6))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 5)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 4) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 8)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 7))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 6)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 5))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 4)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 3) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 8))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 7)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 6))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 5)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 4))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 3)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 2) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 8)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 6)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 5))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 4)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 3))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 2)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 1) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10))))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 9)))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 8))))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 7)))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 6))))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 5)))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 4))))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 3)))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 2))) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 1)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if (zero? 0) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (if true 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 10)))))))))))))))))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 10)))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 11))))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 (add1 12)))))))
add1 (add1 (add1 (add1 (add1 (add1 (add1 13))))))
add1 (add1 (add1 (add1 (add1 (add1 14)))))
add1 (add1 (add1 (add1 (add1 15))))
add1 (add1 (add1 (add1 16)))
add1 (add1 (add1 17))
add1 (add1 18)
add1 19
20




plus'
(λf.(λx.x x) (λx.f (x x))) (λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) 10 1
(λf.(λx.x x) (λx.f (x x))) (λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) 10 1
(λx.x x) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 1
(λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 1
(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 1
(λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 1
(λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) 1
if (zero? 1) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 1)))
if false 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 1)))
add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 1))
add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 10 (sub1 1))
add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 10 (sub1 1))
add1 ((λm.if (zero? m) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 m)))) (sub1 1))
add1 (if (zero? (sub1 1)) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 1)))))
add1 (if (zero? 0) 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 1)))))
add1 (if true 10 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 10 (sub1 (sub1 1)))))
add1 10
11




(λf.(λx.x x) (λx.f (x x)))

Y ≜ λf.(λx.f (x x)) (λx.f (x x))
Y is defined :)

plus'
plus ≜ Y (λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m))))
plus is defined :)


plus 5 5
plus 5 5
(λf.(λx.f (x x)) (λx.f (x x))) (λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) 5 5
(λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 5
(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 5 5
(λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 5 5
(λm.if (zero? m) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 m)))) 5
if (zero? 5) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 5)))
if false 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 5)))
add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 5))
add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 5 (sub1 5))
add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 5 (sub1 5))
add1 ((λm.if (zero? m) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 m)))) (sub1 5))
add1 (if (zero? (sub1 5)) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 5)))))
add1 (if (zero? 4) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 5)))))
add1 (if false 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 5)))))
add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 5))))
add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 5 (sub1 (sub1 5))))
add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 5 (sub1 (sub1 5))))
add1 (add1 ((λm.if (zero? m) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 m)))) (sub1 (sub1 5))))
add1 (add1 (if (zero? (sub1 (sub1 5))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 5)))))))
add1 (add1 (if (zero? (sub1 4)) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 5)))))))
add1 (add1 (if (zero? 3) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 5)))))))
add1 (add1 (if false 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 5)))))))
add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 5))))))
add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 5 (sub1 (sub1 (sub1 5))))))
add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 5 (sub1 (sub1 (sub1 5))))))
add1 (add1 (add1 ((λm.if (zero? m) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 m)))) (sub1 (sub1 (sub1 5))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 5)))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 5)))))))))
add1 (add1 (add1 (if (zero? (sub1 (sub1 4))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 5)))))))))
add1 (add1 (add1 (if (zero? (sub1 3)) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 5)))))))))
add1 (add1 (add1 (if (zero? 2) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 5)))))))))
add1 (add1 (add1 (if false 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 5)))))))))
add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 5))))))))
add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 5 (sub1 (sub1 (sub1 (sub1 5))))))))
add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 5 (sub1 (sub1 (sub1 (sub1 5))))))))
add1 (add1 (add1 (add1 ((λm.if (zero? m) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 5))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 5))))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 4)))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 3))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))
add1 (add1 (add1 (add1 (if (zero? (sub1 2)) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))
add1 (add1 (add1 (add1 (if (zero? 1) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))
add1 (add1 (add1 (add1 (if false 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))
add1 (add1 (add1 (add1 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5))))))))))
add1 (add1 (add1 (add1 (add1 ((λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x))) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5))))))))))
add1 (add1 (add1 (add1 (add1 ((λn.λm.if (zero? m) n (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) n (sub1 m)))) 5 (sub1 (sub1 (sub1 (sub1 (sub1 5))))))))))
add1 (add1 (add1 (add1 (add1 ((λm.if (zero? m) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 m)))) (sub1 (sub1 (sub1 (sub1 (sub1 5))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 (sub1 5)))))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 (sub1 4))))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 (sub1 3)))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 (sub1 2))) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? (sub1 1)) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))))
add1 (add1 (add1 (add1 (add1 (if (zero? 0) 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))))
add1 (add1 (add1 (add1 (add1 (if true 5 (add1 ((λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) (λx.(λself.λn.λm.if (zero? m) n (add1 (self n (sub1 m)))) (x x)) 5 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 5)))))))))))))
add1 (add1 (add1 (add1 (add1 5))))
add1 (add1 (add1 (add1 6)))
add1 (add1 (add1 7))
add1 (add1 8)
add1 9
10





*~*~*~*~*~*~*~*~*

:slide summary?

*~*~*~*~*~*~*~*~*

:slide some-functions?

*~*~*~*~*~*~*~*~*

:slide real-world

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

:install real-world
Installing Real-World...

the Real-World consists of horrible and convenient things...

+ 1 (+ 3 4)
8

= (+ 1 (+ 3 4)) (+ 1 (+ 1 (+ 1 (+ 1 (+ 1 (+ 1 (+ 1 1)))))))
= 8 (+ 1 (+ 1 (+ 1 (+ 1 (+ 1 (+ 1 (+ 1 1)))))))
= 8 8
true

and (= (+ 1 (+ 3 4)) 8) (= (% 6 3) 0)
if (= (+ 1 (+ 3 4)) 8) (= (% 6 3) 0) false
if (= 8 8) (= (% 6 3) 0) false
if true (= (% 6 3) 0) false
= (% 6 3) 0
= 0 0
true

print 5
out: 5
true

(λx.+ x 3) 5
+ 5 3
8

print ((λx.+ x 3) 5)
out: 8
true

and (print ((λx.+ x 3) 5)) (= (+ 3 2) 5)
if (print ((λx.+ x 3) 5)) (= (+ 3 2) 5) false
out: 8
if true (= (+ 3 2) 5) false
= (+ 3 2) 5
= 5 5
true


so:
we're going to need some helper functions


div3 ≜ λn.= 0 (% n 3)
div3 is defined :)
div3 is defined :)

div3 5
(λn.= 0 (% n 3)) 5
= 0 (% 5 3)
= 0 2
false

div5 ≜ λn.= 0 (% n 5)
div5 is defined :)

div15 ≜ λn.= 0 (% n 15)
div15 is defined :)


fbhalp ≜ λn.if (div15 n) fizzbuzz (if (div3 n) fizz (if (div5 n) buzz n))
fbhalp is defined :)


fbhalp 12
(λn.if ((λn.= 0 (% n 15)) n) fizzbuzz (if ((λn.= 0 (% n 3)) n) fizz (if ((λn.= 0 (% n 5)) n) buzz n))) 12
if ((λn.= 0 (% n 15)) 12) fizzbuzz (if ((λn.= 0 (% n 3)) 12) fizz (if ((λn.= 0 (% n 5)) 12) buzz 12))
if (= 0 (% 12 15)) fizzbuzz (if ((λn.= 0 (% n 3)) 12) fizz (if ((λn.= 0 (% n 5)) 12) buzz 12))
if (= 0 12) fizzbuzz (if ((λn.= 0 (% n 3)) 12) fizz (if ((λn.= 0 (% n 5)) 12) buzz 12))
if false fizzbuzz (if ((λn.= 0 (% n 3)) 12) fizz (if ((λn.= 0 (% n 5)) 12) buzz 12))
if ((λn.= 0 (% n 3)) 12) fizz (if ((λn.= 0 (% n 5)) 12) buzz 12)
if (= 0 (% 12 3)) fizz (if ((λn.= 0 (% n 5)) 12) buzz 12)
if (= 0 0) fizz (if ((λn.= 0 (% n 5)) 12) buzz 12)
if true fizz (if ((λn.= 0 (% n 5)) 12) buzz 12)
fizz

fbhalp 13
(λn.if ((λn.= 0 (% n 15)) n) fizzbuzz (if ((λn.= 0 (% n 3)) n) fizz (if ((λn.= 0 (% n 5)) n) buzz n))) 13
if ((λn.= 0 (% n 15)) 13) fizzbuzz (if ((λn.= 0 (% n 3)) 13) fizz (if ((λn.= 0 (% n 5)) 13) buzz 13))
if (= 0 (% 13 15)) fizzbuzz (if ((λn.= 0 (% n 3)) 13) fizz (if ((λn.= 0 (% n 5)) 13) buzz 13))
if (= 0 13) fizzbuzz (if ((λn.= 0 (% n 3)) 13) fizz (if ((λn.= 0 (% n 5)) 13) buzz 13))
if false fizzbuzz (if ((λn.= 0 (% n 3)) 13) fizz (if ((λn.= 0 (% n 5)) 13) buzz 13))
if ((λn.= 0 (% n 3)) 13) fizz (if ((λn.= 0 (% n 5)) 13) buzz 13)
if (= 0 (% 13 3)) fizz (if ((λn.= 0 (% n 5)) 13) buzz 13)
if (= 0 1) fizz (if ((λn.= 0 (% n 5)) 13) buzz 13)
if false fizz (if ((λn.= 0 (% n 5)) 13) buzz 13)
if ((λn.= 0 (% n 5)) 13) buzz 13
if (= 0 (% 13 5)) buzz 13
if (= 0 3) buzz 13
if false buzz 13
13

fbhalp 15
(λn.if ((λn.= 0 (% n 15)) n) fizzbuzz (if ((λn.= 0 (% n 3)) n) fizz (if ((λn.= 0 (% n 5)) n) buzz n))) 15
if ((λn.= 0 (% n 15)) 15) fizzbuzz (if ((λn.= 0 (% n 3)) 15) fizz (if ((λn.= 0 (% n 5)) 15) buzz 15))
if (= 0 (% 15 15)) fizzbuzz (if ((λn.= 0 (% n 3)) 15) fizz (if ((λn.= 0 (% n 5)) 15) buzz 15))
if (= 0 0) fizzbuzz (if ((λn.= 0 (% n 3)) 15) fizz (if ((λn.= 0 (% n 5)) 15) buzz 15))
if true fizzbuzz (if ((λn.= 0 (% n 3)) 15) fizz (if ((λn.= 0 (% n 5)) 15) buzz 15))
fizzbuzz


and a recurring thing

fb' ≜ λself.λn.if (= 101 n) true (and (print (fbhalp n)) (self (+ n 1)))
fb' is defined :)

fb ≜ Y fb' 1
fb is defined :)

fb
out: 1
out: 2
out: fizz
out: 4
out: buzz
out: fizz
out: 7
out: 8
out: fizz
out: buzz
out: 11
out: fizz
out: 13
out: 14
out: fizzbuzz
out: 16
out: 17
out: fizz
out: 19
out: buzz
out: fizz
out: 22
out: 23
out: fizz
out: buzz
out: 26
out: fizz
out: 28
out: 29
out: fizzbuzz
out: 31
out: 32
out: fizz
out: 34
out: buzz
out: fizz
out: 37
out: 38
out: fizz
out: buzz
out: 41
out: fizz
out: 43
out: 44
out: fizzbuzz
out: 46
out: 47
out: fizz
out: 49
out: buzz
out: fizz
out: 52
out: 53
out: fizz
out: buzz
out: 56
out: fizz
out: 58
out: 59
out: fizzbuzz
out: 61
out: 62
out: fizz
out: 64
out: buzz
out: fizz
out: 67
out: 68
out: fizz
out: buzz
out: 71
out: fizz
out: 73
out: 74
out: fizzbuzz
out: 76
out: 77
out: fizz
out: 79
out: buzz
out: fizz
out: 82
out: 83
out: fizz
out: buzz
out: 86
out: fizz
out: 88
out: 89
out: fizzbuzz
out: 91
out: 92
out: fizz
out: 94
out: buzz
out: fizz
out: 97
out: 98
out: fizz
out: buzz


:slide summary?

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

1. type checkers tend not to like λx.x x
2.
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)
(λx.x x) (λx.x x)


3. (more than) as many foos as we want
(λx.x x) (λx.foo (x x))
(λx.foo (x x)) (λx.foo (x x))
foo ((λx.foo (x x)) (λx.foo (x x)))
foo (foo ((λx.foo (x x)) (λx.foo (x x))))
foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))
foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))
foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))
foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))
foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x)))))))))
foo (foo (foo (foo (foo (foo (foo (foo ((λx.foo (x x)) (λx.foo (x x))))))))))
4. abstraction
λf.(λx.x x) (λx.f (x x))
Y ≜ λf.(λx.f (x x)) (λx.f (x x))
5. eval into Y

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 



 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 


*~*~*~*~*~*~*~*~*

:slide links?

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

code: https://github.com/Glorp/lambs
some lambdas
   http://llama-the-ultimate.org/lambdas.html
or http://llama-the-ultimate.org/lists/lambs.html or sth

 =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^=   =^..^= 

